
expressions = 
ğŸ’° = 'start'
ğŸ’°ğŸ’° = 'define'
ğŸ’°ğŸ’°ğŸ’° = 'condition'
ğŸ’°ğŸ’°ğŸ’°ğŸ’° = 'update'
ğŸ’°ğŸ’°ğŸ’°ğŸ’°ğŸ’° = 'end'

datatypes = 
ğŸ’° = 'identifier'
ğŸ’°ğŸ’° = 'bool'
ğŸ’°ğŸ’°ğŸ’° = 'int'
ğŸ’°ğŸ’°ğŸ’°ğŸ’° = 'string'

operators = 
ğŸ’° = '='
ğŸ’°ğŸ’° = '+'
ğŸ’°ğŸ’°ğŸ’° = '-'
ğŸ’°ğŸ’°ğŸ’°ğŸ’° = '*'
ğŸ’°ğŸ’°ğŸ’°ğŸ’°ğŸ’° = '/'
ğŸ’°ğŸ’°ğŸ’°ğŸ’°ğŸ’°ğŸ’° = '%'

conditionals = 
ğŸ’° = 'true'
ğŸ’°ğŸ’° = 'false'
ğŸ’°ğŸ’°ğŸ’° = 'if'
ğŸ’°ğŸ’°ğŸ’°ğŸ’° = 'and'
ğŸ’°ğŸ’°ğŸ’°ğŸ’°ğŸ’° = 'or'
ğŸ’°ğŸ’°ğŸ’°ğŸ’°ğŸ’°ğŸ’° = 'then'

comparators = 
ğŸ’° = '='
ğŸ’°ğŸ’° = '>'
ğŸ’°ğŸ’°ğŸ’° = '<'
ğŸ’°ğŸ’°ğŸ’°ğŸ’° = '!='

identifier = the number of money bags for each index in the identifier. For example, 12 = ğŸ’°ğŸ’° ğŸ’°ğŸ’°ğŸ’° ğŸ’°, ending character is ğŸ’°,

validCharacters = {
    1: '\0',
    2: 'a',
    3: 'b',
    4: 'c',
    5: 'd',
    6: 'e',
    7: 'f',
    8: 'g',
    9: 'h',
    10: 'i',
    11: 'j',
    12: 'k',
    13: 'l',
    14: 'm',
    15: 'n',
    16: 'o',
    17: 'p',
    18: 'q',
    19: 'r',
    20: 's',
    21: 't',
    22: 'u',
    23: 'v',
    24: 'w',
    25: 'x',
    26: 'y',
    27: 'z',
    29: '0',
    30: '1',
    31: '2',
    32: '3',
    33: '4',
    34: '5',
    35: '6',
    36: '7',
    37: '8',
    38: '9',
    }

    <start>
    
    <define><type><id><value>
    <bool><id><value> (<1> or <2> for T or f)
    <string><id><value>
    <number><id><value>
    
    <conditional> = <comparator><stmt>
    <comparator> 
    <type>(int, str, bool, id) <value>
    <relop>
    <type> (int, str, bool, id) <value>
    <expr> = <conditional, update>
    
    <update> = <id><op>(=,+,-,*,/,%)<val>
    
    <end>    